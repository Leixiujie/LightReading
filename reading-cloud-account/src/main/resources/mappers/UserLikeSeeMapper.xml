<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.zealon.readingcloud.account.dao.UserLikeSeeMapper">

    <resultMap id="BaseResultMap" type="cn.zealon.readingcloud.common.pojo.account.UserLikeSee">
        <id column="id" jdbcType="INTEGER" property="id" />
        <result column="user_id" jdbcType="INTEGER" property="userId" />
        <result column="book_id" jdbcType="VARCHAR" property="bookId" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    </resultMap>

    <sql id="Base_Column_List">
      id, user_id, book_id, create_time
    </sql>

    <delete id="deleteByUserIdAndBookId" >
      delete from user_like_see
      where book_id = #{bookId} and user_id = #{userId}
    </delete>

    <insert id="insert" parameterType="cn.zealon.readingcloud.common.pojo.account.UserLikeSee">
      insert into user_like_see (id, user_id, book_id, create_time)
      values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=VARCHAR}, now())
    </insert>

    <sql id="findPageWithWhere">
        <where> 1=1
            <if test="userId != null" >
                and user_id = #{userId}
            </if>
            <if test="bookId != null and bookId != ''" >
                and book_id = #{bookId,jdbcType=VARCHAR}
            </if>
        </where>
    </sql>

    <select id="findPageWithResult" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from  user_like_see
        where user_id = #{userId}
    </select>

    <select id="findPageWithCount" resultType="Integer">
        select count(1)
        from user_like_see
        where book_id = #{bookId,jdbcType=VARCHAR}
    </select>

    <select id="selectCountByUserAndBookId" resultType="java.lang.Integer">
        select count(1) from user_like_see
        where user_id=#{userId} and book_id=#{bookId}
    </select>

</mapper>